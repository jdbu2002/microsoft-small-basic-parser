inicio:
	$
statement:
	WHILE
	ENDSUB
	ELSEIF
	ARRAY
	FOR
	ELSE
	ID
	ENDWHILE
	ENDIF
	TEXTWINDOW
	GOTO
	SUB
	ENDFOR
	IF
	$
	STACK
	PROGRAM
subst:
	ENDSUB
whilest:
	ENDWHILE
asig:
	TO
asig2:
	TO
forst:
	ENDFOR
forst2:
	ENDFOR
ifst2:
	ENDIF
ifst3:
	ENDIF
ifst4:
	ENDIF
idst:
	WHILE
	ENDSUB
	ELSEIF
	ARRAY
	FOR
	ELSE
	ID
	ENDWHILE
	ENDIF
	TEXTWINDOW
	GOTO
	SUB
	ENDFOR
	IF
	$
	STACK
	PROGRAM
idst2:
	WHILE
	ENDSUB
	ELSEIF
	ARRAY
	FOR
	ELSE
	ID
	ENDWHILE
	ENDIF
	TEXTWINDOW
	GOTO
	SUB
	ENDFOR
	IF
	$
	STACK
	PROGRAM
idst2prima:
	WHILE
	ENDSUB
	ELSEIF
	ARRAY
	FOR
	ELSE
	ID
	ENDWHILE
	ENDIF
	TEXTWINDOW
	GOTO
	SUB
	ENDFOR
	IF
	$
	STACK
	PROGRAM
bifunc:
	ARRAY
	FOR
	TEXTWINDOW
	TKN_TIMES
	TKN_DIV
	SUB
	TKN_LESS
	TKN_MINUS
	TKN_LEQ
	TO
	IF
	AND
	STEP
	STACK
	ENDWHILE
	PROGRAM
	WHILE
	ENDSUB
	ELSEIF
	OR
	ENDIF
	ELSE
	ID
	TKN_RIGHT_PAREN
	GOTO
	TKN_COMMA
	TKN_DIFF
	TKN_RIGHT_BRAC
	TKN_PLUS
	ENDFOR
	TKN_EQUALS
	TKN_GREATER
	$
	TKN_GEQ
bifun:
	TKN_PERIOD
funcparam:
	TKN_RIGHT_PAREN
funcparam2:
	TKN_RIGHT_PAREN
be:
	WHILE
	ENDSUB
	ELSEIF
	ARRAY
	FOR
	ENDIF
	ELSE
	ID
	ENDWHILE
	TEXTWINDOW
	TKN_RIGHT_PAREN
	GOTO
	SUB
	TKN_COMMA
	TKN_RIGHT_BRAC
	ENDFOR
	TO
	IF
	STEP
	$
	STACK
	PROGRAM
beprima:
	WHILE
	ENDSUB
	ELSEIF
	ARRAY
	FOR
	ENDIF
	ELSE
	ID
	ENDWHILE
	TEXTWINDOW
	TKN_RIGHT_PAREN
	GOTO
	SUB
	TKN_COMMA
	TKN_RIGHT_BRAC
	ENDFOR
	TO
	IF
	STEP
	$
	STACK
	PROGRAM
be2:
	OR
	WHILE
	ENDSUB
	ELSEIF
	ARRAY
	FOR
	ENDIF
	ELSE
	ID
	TEXTWINDOW
	TKN_RIGHT_PAREN
	GOTO
	SUB
	TKN_COMMA
	TKN_RIGHT_BRAC
	ENDFOR
	PROGRAM
	TO
	AND
	IF
	STEP
	$
	STACK
	ENDWHILE
be2prima:
	OR
	WHILE
	ENDSUB
	ELSEIF
	ARRAY
	FOR
	ENDIF
	ELSE
	ID
	TEXTWINDOW
	TKN_RIGHT_PAREN
	GOTO
	SUB
	TKN_COMMA
	TKN_RIGHT_BRAC
	ENDFOR
	PROGRAM
	TO
	AND
	IF
	STEP
	$
	STACK
	ENDWHILE
bt:
	ARRAY
	FOR
	TEXTWINDOW
	SUB
	TKN_LESS
	TKN_LEQ
	TO
	AND
	IF
	STEP
	STACK
	ENDWHILE
	PROGRAM
	OR
	WHILE
	ENDSUB
	ELSEIF
	ENDIF
	ELSE
	ID
	TKN_RIGHT_PAREN
	GOTO
	TKN_COMMA
	TKN_DIFF
	TKN_RIGHT_BRAC
	ENDFOR
	TKN_EQUALS
	TKN_GREATER
	$
	TKN_GEQ
bcop:
	TKN_NUMBER
	TKN_MINUS
	ARRAY
	TKN_LEFT_PAREN
	FALSE
	ID
	TKN_TEXT
	TEXTWINDOW
	TRUE
	STACK
	PROGRAM
bop:
	TKN_NUMBER
	TKN_MINUS
	ARRAY
	TKN_LEFT_PAREN
	FALSE
	ID
	TKN_TEXT
	TEXTWINDOW
	TRUE
	STACK
	PROGRAM
ae:
	ARRAY
	FOR
	TEXTWINDOW
	SUB
	TKN_LESS
	TKN_LEQ
	TO
	IF
	AND
	STEP
	STACK
	PROGRAM
	ENDWHILE
	WHILE
	OR
	ENDSUB
	ELSEIF
	ENDIF
	ELSE
	ID
	TKN_RIGHT_PAREN
	GOTO
	TKN_COMMA
	TKN_DIFF
	TKN_RIGHT_BRAC
	ENDFOR
	TKN_EQUALS
	TKN_GREATER
	$
	TKN_GEQ
aeprima:
	WHILE
	OR
	ENDSUB
	ELSEIF
	ARRAY
	FOR
	ENDWHILE
	ENDIF
	ELSE
	ID
	TEXTWINDOW
	TKN_RIGHT_PAREN
	GOTO
	SUB
	TKN_COMMA
	TKN_DIFF
	TKN_LESS
	TKN_GEQ
	TKN_RIGHT_BRAC
	TKN_LEQ
	ENDFOR
	TO
	TKN_EQUALS
	IF
	AND
	STEP
	TKN_GREATER
	STACK
	$
	PROGRAM
ae2:
	ARRAY
	FOR
	TEXTWINDOW
	SUB
	TKN_LESS
	TKN_MINUS
	TKN_LEQ
	TO
	IF
	AND
	STEP
	STACK
	PROGRAM
	ENDWHILE
	WHILE
	OR
	ENDSUB
	ELSEIF
	ENDIF
	ELSE
	ID
	TKN_RIGHT_PAREN
	GOTO
	TKN_COMMA
	TKN_DIFF
	TKN_RIGHT_BRAC
	TKN_PLUS
	ENDFOR
	TKN_EQUALS
	TKN_GREATER
	$
	TKN_GEQ
ae2prima:
	ARRAY
	FOR
	TEXTWINDOW
	SUB
	TKN_LESS
	TKN_MINUS
	TKN_LEQ
	TO
	IF
	AND
	STEP
	STACK
	PROGRAM
	ENDWHILE
	WHILE
	OR
	ENDSUB
	ELSEIF
	ENDIF
	ELSE
	ID
	TKN_RIGHT_PAREN
	GOTO
	TKN_COMMA
	TKN_DIFF
	TKN_RIGHT_BRAC
	TKN_PLUS
	ENDFOR
	TKN_EQUALS
	TKN_GREATER
	$
	TKN_GEQ
opsum:
	TKN_NUMBER
	TKN_MINUS
	ARRAY
	TKN_LEFT_PAREN
	FALSE
	ID
	TKN_TEXT
	TEXTWINDOW
	TRUE
	STACK
	PROGRAM
opmul:
	TKN_NUMBER
	TKN_MINUS
	ARRAY
	TKN_LEFT_PAREN
	FALSE
	ID
	TKN_TEXT
	TEXTWINDOW
	TRUE
	STACK
	PROGRAM
t:
	ARRAY
	FOR
	TKN_TIMES
	TEXTWINDOW
	TKN_DIV
	SUB
	TKN_LESS
	TKN_MINUS
	TKN_LEQ
	TO
	IF
	AND
	STEP
	STACK
	PROGRAM
	ENDWHILE
	WHILE
	OR
	ENDSUB
	ELSEIF
	ENDIF
	ELSE
	ID
	TKN_RIGHT_PAREN
	GOTO
	TKN_COMMA
	TKN_DIFF
	TKN_RIGHT_BRAC
	TKN_PLUS
	ENDFOR
	TKN_EQUALS
	TKN_GREATER
	$
	TKN_GEQ
t2:
	ARRAY
	FOR
	TKN_TIMES
	TEXTWINDOW
	TKN_DIV
	SUB
	TKN_LESS
	TKN_MINUS
	TKN_LEQ
	TO
	IF
	AND
	STEP
	STACK
	PROGRAM
	ENDWHILE
	WHILE
	OR
	ENDSUB
	ELSEIF
	ENDIF
	ELSE
	ID
	TKN_RIGHT_PAREN
	GOTO
	TKN_COMMA
	TKN_DIFF
	TKN_RIGHT_BRAC
	TKN_PLUS
	ENDFOR
	TKN_EQUALS
	TKN_GREATER
	$
	TKN_GEQ
var:
	ARRAY
	FOR
	TKN_TIMES
	TEXTWINDOW
	TKN_DIV
	SUB
	TKN_LESS
	TKN_MINUS
	TKN_LEQ
	TO
	IF
	AND
	STEP
	STACK
	PROGRAM
	ENDWHILE
	WHILE
	OR
	ENDSUB
	ELSEIF
	ENDIF
	ELSE
	ID
	TKN_RIGHT_PAREN
	GOTO
	TKN_COMMA
	TKN_DIFF
	TKN_RIGHT_BRAC
	TKN_PLUS
	ENDFOR
	TKN_EQUALS
	TKN_GREATER
	$
	TKN_GEQ
var2:
	ARRAY
	FOR
	TKN_TIMES
	TEXTWINDOW
	TKN_DIV
	SUB
	TKN_LESS
	TKN_MINUS
	TKN_LEQ
	TO
	IF
	AND
	STEP
	STACK
	PROGRAM
	ENDWHILE
	WHILE
	OR
	ENDSUB
	ELSEIF
	ENDIF
	ELSE
	ID
	TKN_RIGHT_PAREN
	GOTO
	TKN_COMMA
	TKN_DIFF
	TKN_RIGHT_BRAC
	TKN_PLUS
	ENDFOR
	TKN_EQUALS
	TKN_GREATER
	$
	TKN_GEQ
